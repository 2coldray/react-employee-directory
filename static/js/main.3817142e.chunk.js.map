{"version":3,"sources":["containers/Home/Home.jsx","components/Jumbotron/Jumbotron.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","state","search","users","handleInputChange","event","target","name","value","myFunction","setState","axios","get","then","response","console","log","data","results","n","table","document","getElementById","i","x","y","count","switching","direction","rows","length","Switch","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","filter","tr","td","toUpperCase","textContent","innerText","indexOf","style","display","className","type","id","placeholder","this","onChange","scope","onClick","sortTable","map","user","first","src","picture","thumbnail","alt","phone","email","dob","date","Component","Jumbotron","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3817142e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Home extends Component {\n  state = {\n    search: \"\",\n    users: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://cors-anywhere.herokuapp.com/https://randomuser.me/api/?results=10&nat=us\"\n      )\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          users: response.data.results,\n        });\n      });\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.myFunction();\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  sortTable(n) {\n    var table;\n    table = document.getElementById(\"table\");\n    var rows,\n      i,\n      x,\n      y,\n      count = 0;\n    var switching = true;\n\n    // Order is set as ascending\n    var direction = \"ascending\";\n\n    // Run loop until no switching is needed\n    while (switching) {\n      switching = false;\n      var rows = table.rows;\n\n      //Loop to go through all rows\n      for (i = 1; i < rows.length - 1; i++) {\n        var Switch = false;\n\n        // Fetch 2 elements that need to be compared\n        x = rows[i].getElementsByTagName(\"TD\")[n];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n\n        // Check the direction of order\n        if (direction === \"ascending\") {\n          // Check if 2 rows need to be switched\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            // If yes, mark Switch as needed and break loop\n            Switch = true;\n            break;\n          }\n        } else if (direction === \"descending\") {\n          // Check direction\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            // If yes, mark Switch as needed and break loop\n            Switch = true;\n            break;\n          }\n        }\n      }\n      if (Switch) {\n        // Function to switch rows and mark switch as completed\n        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n\n        // Increase count for each switch\n        count++;\n      } else {\n        // Run while loop again for descending order\n        if (count === 0 && direction === \"ascending\") {\n          direction = \"descending\";\n          switching = true;\n        }\n      }\n    }\n  }\n\n  myFunction() {\n    var input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(\"exampleInputSearch\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"table\");\n    tr = table.getElementsByTagName(\"tr\");\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\"></div>\n          <div className=\"col-sm-6 text-center\">\n            <form>\n              <div className=\"form-group\">\n                <input\n                  type=\"search\"\n                  className=\"form-control text-center\"\n                  id=\"exampleInputSearch\"\n                  name=\"search\"\n                  placeholder=\"search\"\n                  value={this.state.search}\n                  onChange={this.handleInputChange}\n                />\n              </div>\n            </form>\n          </div>\n          <div className=\"col-sm-3\"></div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <table className=\"table table-striped\" id=\"table\">\n              <thead>\n                <tr>\n                  <th\n                    scope=\"col\"\n                    onClick={() => {\n                      this.sortTable(0);\n                    }}\n                  >\n                    Name\n                  </th>\n                  <th scope=\"col\">Image</th>\n                  <th scope=\"col\">Phone Number</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">DOB</th>\n                  <th scope=\"col\">ID</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.users.map((user) => (\n                  <tr key={user.id.value}>\n                    <td>{user.name.first}</td>\n                    <td>\n                      <img src={user.picture.thumbnail} alt={user.name.first} />\n                    </td>\n                    <td>{user.phone}</td>\n                    <td>{user.email}</td>\n                    <td>{user.dob.date}</td>\n                    <td>{user.id.value} </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst Jumbotron = () => {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4 text-center\">Employee Directory</h1>\n        <p className=\"lead text-center\">\n            Click the \"Name\" heading to sort the table alphabetically by heading or use the search box to search or filter the employees by name.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Jumbotron;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\nimport Home from \"./containers/Home/Home\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\"\n\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <Jumbotron />\n      <Switch>\n        <Route exact path=\"/react-employee-directory\" component={Home} />\n      </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}